openapi: 3.0.3
info:
  version: 1.0.0
  title: OSS Surveys API

security:
  - bearerAuth: []

paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags:
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/surveys:
    get:
      operationId: listSurveys
      summary: List surveys.
      description: Lists surveys.
      tags:
        - Surveys
      parameters:
        - name: firstResult
          in: query
          description: First result. Defaults to 0
          schema:
            type: integer
        - name: maxResults
          in: query
          description: Max results. Defaults to 10
          schema:
            type: integer
      responses:
        "200":
          description: List of Surveys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Survey"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of Surveys with given filters.
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSurvey
      summary: Create an Survey.
      description: Creates a new Survey.
      tags:
        - Surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Survey"
        description: Payload
        required: true
      responses:
        "200":
          description: Created Survey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Survey"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/surveys/{surveyId}:
    get:
      operationId: findSurvey
      summary: Find a Survey.
      description: Finds a Survey by id.
      tags:
        - Surveys
      parameters:
        - name: surveyId
          required: true
          in: path
          description: Survey id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Survey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Survey"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateSurvey
      summary: Update a Survey.
      description: Updates a Survey
      tags:
        - Surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Survey"
        description: Payload
        required: true
      parameters:
        - name: surveyId
          required: true
          in: path
          description: Survey id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated Survey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Survey"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteSurvey
      summary: Delete a Survey.
      description: Deletes a Survey.
      tags:
        - Surveys
      parameters:
        - name: surveyId
          required: true
          in: path
          description: Survey id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/fleet/devices:
    get:
      operationId: listDevices
      summary: List devices
      description: Lists devices.
      tags:
        - Devices
      parameters:
        - name: firstResult
          in: query
          description: First result. Defaults to 0
          schema:
            type: integer
        - name: maxResults
          in: query
          description: Max results. Defaults to 10
          schema:
            type: integer
      responses:
        "200":
          description: List of devices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Device"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /v1/fleet/devices/{deviceId}:
    get:
      operationId: findDevice
      summary: Finds a device
      description: Finds a Device by id.
      tags:
        - Devices
      parameters:
        - name: deviceId
          required: true
          in: path
          description: Device id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateDevice
      summary: Update a Device.
      description: Updates a Device
      tags:
        - Devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device"
        description: Payload
        required: true
      parameters:
        - name: deviceId
          required: true
          in: path
          description: Device id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated Device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/fleet/devices/requests/{serialNumber}:
    post:
      operationId: createDeviceRequest
      summary: Creates a Device Request
      description: Creates a Device Request.
      tags:
        - Devices
      parameters:
        - name: serialNumber
          required: true
          in: path
          description: Device serial number
          schema:
            type: string
      responses:
        "201":
          description: Created Device Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceRequest"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /v1/fleet/devices/requests/{requestId}:
    put:
      operationId: getDeviceKey
      summary: Gets device key
      description: Gets device key if device is approved.
      tags:
        - Devices
      parameters:
        - name: requestId
          required: true
          in: path
          description: Device Request id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Device key
          content:
            text/plain:
              schema:
                type: string
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Metadata:
      type: object
      description: Metadata object
      properties:
        creatorId:
          type: string
          format: uuid
          description: ID of creator
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          description: Id of last modifier
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    Survey:
      type: object
      description: Survey object
      required:
        - title
      properties:
        id:
          type: string
          format: uuid
          description: ID of survey
          readOnly: true
        title:
          type: string
          description: Name of survey
        metadata:
          $ref: "#/components/schemas/Metadata"
          
    Device:
      type: object
      description: Device object
      properties:
        id:
          type: string
          format: uuid
          description: ID of Device
          readOnly: true
        name:
          type: string
          description: Name of Device
        serialNumber:
          type: string
          description: Serial Number of Device
        description:
          type: string
          description: Description of Device
        location:
          type: string
          description: Location of Device
        deviceStatus:
          $ref: "#/components/schemas/DeviceStatus"
        metadata:
          $ref: "#/components/schemas/Metadata"
   
    DeviceRequest:
      type: object
      description: Device Request object
      properties:
        id:
          type: string
          format: uuid
          description: ID of Device Request
        serialNumber:
          type: string
          description: Serial Number of Device requesting approval
        approvalStatus:
          $ref: "#/components/schemas/DeviceApprovalStatus"
        Metadata:
          $ref: "#/components/schemas/Metadata"
    
    DeviceApprovalStatus:
      type: string
      enum:
        - PENDING
        - APPROVED

    DeviceStatus:
      type: string
      enum:
        - ONLINE
        - OFFLINE